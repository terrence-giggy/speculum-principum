name: Operations -2 Workflow Assignment

permissions:
  contents: read
  issues: write

on:
  # Trigger when new site-monitor issues are created
  issues:
    types: [opened, labeled]
  
  # Allow manual execution
  workflow_dispatch:
    inputs:
      limit:
        description: 'Maximum number of issues to process'
        required: false
        type: number
        default: 10
      dry_run:
        description: 'Perform dry run without making changes'
        required: false
        type: boolean
        default: true
      verbose:
        description: 'Show detailed progress information'
        required: false
        type: boolean
        default: true
      statistics_only:
        description: 'Only show statistics without processing issues'
        required: false
        type: boolean
        default: false

  # Schedule to run every 2 hours to catch unassigned issues
  schedule:
    - cron: '0 */2 * * *'  # Every 2 hours

jobs:
  # Job to check if workflow assignment is needed
  check-assignment-needed:
    name: Check if Workflow Assignment is Needed
    runs-on: ubuntu-latest
    outputs:
      should_assign: ${{ steps.check.outputs.should_assign }}
      unassigned_count: ${{ steps.check.outputs.unassigned_count }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check for unassigned site-monitor issues
      id: check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
      run: |
        # Get statistics to determine if assignment is needed
        OUTPUT=$(python main.py assign-workflows --config config.yaml --statistics --verbose 2>&1)
        echo "$OUTPUT"
        
        # Extract unassigned count from the output
        UNASSIGNED=$(echo "$OUTPUT" | grep -o "Unassigned issues: [0-9]*" | grep -o "[0-9]*" || echo "0")
        echo "unassigned_count=$UNASSIGNED" >> $GITHUB_OUTPUT
        
        # Determine if assignment is needed
        if [ "$UNASSIGNED" -gt "0" ]; then
          echo "should_assign=true" >> $GITHUB_OUTPUT
          echo "Found $UNASSIGNED unassigned site-monitor issues"
        else
          echo "should_assign=false" >> $GITHUB_OUTPUT
          echo "No unassigned site-monitor issues found"
        fi

  # Job to assign workflows to issues
  assign-workflows:
    name: Assign Workflows to Issues
    runs-on: ubuntu-latest
    needs: check-assignment-needed
    if: |
      needs.check-assignment-needed.outputs.should_assign == 'true' || 
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'site-monitor'))
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Show Statistics (if requested)
      if: github.event.inputs.statistics_only == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
      run: |
        echo "🔍 Showing workflow assignment statistics..."
        python main.py assign-workflows --config config.yaml --statistics --verbose
    
    - name: Assign Workflows (Dry Run)
      if: |
        github.event.inputs.statistics_only != 'true' && 
        (github.event.inputs.dry_run == 'true' || github.event.inputs.dry_run == null)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
      run: |
        LIMIT=${{ github.event.inputs.limit || '10' }}
        VERBOSE_FLAG=${{ github.event.inputs.verbose == 'true' && '--verbose' || '' }}
        
        echo "🧪 Running workflow assignment (DRY RUN)..."
        echo "Processing up to $LIMIT issues"
        
        python main.py assign-workflows \
          --config config.yaml \
          --limit "$LIMIT" \
          --dry-run \
          $VERBOSE_FLAG
    
    - name: Assign Workflows (Production)
      if: |
        github.event.inputs.statistics_only != 'true' && 
        github.event.inputs.dry_run == 'false' &&
        github.event_name != 'schedule'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
      run: |
        LIMIT=${{ github.event.inputs.limit || '10' }}
        VERBOSE_FLAG=${{ github.event.inputs.verbose == 'true' && '--verbose' || '' }}
        
        echo "🚀 Running workflow assignment (PRODUCTION)..."
        echo "Processing up to $LIMIT issues"
        
        python main.py assign-workflows \
          --config config.yaml \
          --limit "$LIMIT" \
          $VERBOSE_FLAG
    
    - name: Assign Workflows (Scheduled - Safe)
      if: github.event_name == 'schedule' && needs.check-assignment-needed.outputs.should_assign == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
      run: |
        echo "⏰ Running scheduled workflow assignment..."
        echo "Processing up to 5 issues (safe limit for automated runs)"
        
        # Use conservative limit for scheduled runs
        python main.py assign-workflows \
          --config config.yaml \
          --limit 5 \
          --verbose
    
    - name: Create Summary Report
      if: github.event.inputs.statistics_only != 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
      run: |
        echo "📊 Final Statistics After Processing:"
        python main.py assign-workflows --config config.yaml --statistics
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Workflow Assignment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Unassigned issues before:** ${{ needs.check-assignment-needed.outputs.unassigned_count }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "**Limit:** ${{ github.event.inputs.limit || '10' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Dry Run:** ${{ github.event.inputs.dry_run || 'true' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Statistics Only:** ${{ github.event.inputs.statistics_only || 'false' }}" >> $GITHUB_STEP_SUMMARY
        fi