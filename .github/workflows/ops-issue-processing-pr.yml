name: Operations -3 Issue Processing
permissions:
  contents: write
  issues: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process (optional)'
        required: false
        type: number
      batch_size:
        description: 'Maximum number of issues to process'
        required: false
        type: number
        default: 5
      assignee_filter:
        description: 'Only process issues assigned to this user (or "none" for unassigned)'
        required: false
        type: string
      dry_run:
        description: 'Perform dry run without making changes'
        required: false
        type: boolean
        default: true

jobs:
  process-issues:
    name: Process Site Monitor Issues
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Set up environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
        run: |
          cat > .env << EOF
          GITHUB_TOKEN=${GITHUB_TOKEN}
          GOOGLE_API_KEY=${GOOGLE_API_KEY}
          GOOGLE_SEARCH_ENGINE_ID=${GOOGLE_SEARCH_ENGINE_ID}
          EOF
      
      - name: Find and process issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          SPECULUM_CLI_TELEMETRY_DIR: ${{ runner.temp }}/telemetry/pr
        run: |
          # Build command arguments
          mkdir -p "${SPECULUM_CLI_TELEMETRY_DIR}"

          ARGS="--config config.yaml --verbose --label-filter state::assigned --continue-on-error"
          
          # Add specific issue if provided
          if [ -n "${{ github.event.inputs.issue_number }}" ]; then
            ARGS="${ARGS} --issue ${{ github.event.inputs.issue_number }}"
          else
            # Batch mode - find and process issues automatically
            ARGS="${ARGS} --batch-size ${{ github.event.inputs.batch_size || 5 }}"
            
            # Add assignee filter if provided
            if [ -n "${{ github.event.inputs.assignee_filter }}" ]; then
              ARGS="${ARGS} --assignee-filter '${{ github.event.inputs.assignee_filter }}'"
            fi
          fi
          
          # Add dry-run flag if enabled
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            ARGS="${ARGS} --dry-run"
            echo "🔍 Running in dry-run mode - no changes will be made"
          else
            echo "🚀 Running in live mode - changes will be committed"
          fi
          
          echo "Executing: python main.py process-issues ${ARGS}"
          python main.py process-issues ${ARGS}
      
      - name: Create Pull Request
        if: success() && github.event.inputs.dry_run != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if there are any changes
          if [ -n "$(git status --porcelain)" ]; then
            echo "📝 Changes detected, creating PR..."
            
            # Create a new branch for this processing run
            BRANCH_NAME="automated/issue-processing-$(date +%Y%m%d-%H%M%S)"
            git checkout -b "${BRANCH_NAME}"
            
            # Add and commit changes
            git add .
            git commit -m "docs: automated issue processing" \
                       -m "- Generated deliverables for site-monitor issues" \
                       -m "- Applied workflow-based document generation" \
                       -m "- Automated via GitHub Actions"
            
            # Push the branch
            git push origin "${BRANCH_NAME}"
            
            # Create pull request
            PR_TITLE="Automated issue processing - $(date +%Y-%m-%d)"
            PR_BODY="This PR contains automatically generated deliverables from processing site-monitor issues.

            **Processing Details:**
            - Trigger: Manual workflow dispatch
            - Dry run: ${{ github.event.inputs.dry_run }}
            - Issue: ${{ github.event.inputs.issue_number || 'Batch mode' }}
            - Batch size: ${{ github.event.inputs.batch_size || 5 }}
            - Assignee filter: ${{ github.event.inputs.assignee_filter || 'None' }}

            Generated by GitHub Actions workflow."
            
            gh pr create \
              --title "${PR_TITLE}" \
              --body "${PR_BODY}" \
              --head "${BRANCH_NAME}" \
              --base main
            
            echo "✅ Pull request created successfully"
          else
            echo "ℹ️ No changes to commit - no deliverables were generated"
          fi

      - name: Report results
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Issue processing workflow completed successfully"
          else
            echo "❌ Issue processing workflow failed"
          fi